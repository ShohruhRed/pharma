import pandas as pd
import joblib
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report, accuracy_score

# === 1. –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ–≥–æ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞ ===
df = pd.read_csv("../data/ml_dataset_balanced.csv")

# === 2. –ú–∞–ø–ø–∏–Ω–≥ —ç—Ç–∞–ø–æ–≤ –≤ –∏–Ω–¥–µ–∫—Å ===
stage_map = {
    "Mixing":      0,
    "Granulation": 1,
    "Drying":      2,
    "Pressing":    3,
    "Coating":     4,
    "Packaging":   5
}
df["stage_idx"] = df["stage"].map(stage_map)

# === 3. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –∏ —Ü–µ–ª–µ–≤–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π ===
FEATURES = ["temperature", "pressure", "humidity", "NaCl", "KCl", "stage_idx"]
X = df[FEATURES]
y = df["is_defect"]

# === 4. –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—É—é –∏ —Ç–µ—Å—Ç–æ–≤—É—é –≤—ã–±–æ—Ä–∫–∏ ===
X_train, X_test, y_train, y_test = train_test_split(
    X, y,
    test_size=0.2,
    random_state=42,
    stratify=y
)

# === 5. –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ RandomForest —Å —É—á—ë—Ç–æ–º –¥–∏—Å–±–∞–ª–∞–Ω—Å–∞ –∫–ª–∞—Å—Å–æ–≤ ===
clf = RandomForestClassifier(
    n_estimators=100,
    random_state=42,
    class_weight="balanced"
)
clf.fit(X_train, y_train)

# === 6. –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –Ω–∞ —Ç–µ—Å—Ç–µ ===
y_pred = clf.predict(X_test)
print("\nüìä Classification Report (Random Forest):")
print(classification_report(y_test, y_pred, digits=4))
print(f"‚úÖ Accuracy: {accuracy_score(y_test, y_pred):.4f}")

# === 7. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–±—É—á–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ –∏ —Å–ø–∏—Å–∫–∞ —Ñ–∏—á–µ–π ===
joblib.dump(clf, "../models/defect_predictor_final.pkl")
# –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π ‚Äî —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø–æ—Ä—è–¥–æ–∫ –∫–æ–ª–æ–Ω–æ–∫, —á—Ç–æ–±—ã –ø—Ä–∏ –∏–Ω—Ñ–µ—Ä–µ–Ω—Å–µ –¥–µ–ª–∞—Ç—å pd.DataFrame(data, columns=FEATURES)
joblib.dump(FEATURES, "../models/defect_predictor_features.pkl")

print("‚úÖ –ú–æ–¥–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –∫–∞–∫ defect_predictor_final.pkl")
print("‚úÖ –°–ø–∏—Å–æ–∫ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –∫–∞–∫ defect_predictor_features.pkl")
