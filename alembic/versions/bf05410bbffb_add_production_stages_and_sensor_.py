"""Add production stages and sensor structure

Revision ID: bf05410bbffb
Revises: 7fa8aa734374
Create Date: 2025-04-11 16:29:36.333902

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'bf05410bbffb'
down_revision: Union[str, None] = '7fa8aa734374'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('stages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('start_time', sa.TIMESTAMP(), nullable=False),
    sa.Column('end_time', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['batches.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stages_id'), 'stages', ['id'], unique=False)
    op.create_table('stage_predictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stage_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.TIMESTAMP(), nullable=False),
    sa.Column('defect_prob', sa.Float(), nullable=True),
    sa.Column('recommendation', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['stage_id'], ['stages.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stage_predictions_id'), 'stage_predictions', ['id'], unique=False)
    op.create_table('stage_sensor_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stage_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.TIMESTAMP(), nullable=False),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('pressure', sa.Float(), nullable=True),
    sa.Column('humidity', sa.Float(), nullable=True),
    sa.Column('composition', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['stage_id'], ['stages.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stage_sensor_data_id'), 'stage_sensor_data', ['id'], unique=False)
    op.drop_index('ix_predictions_id', table_name='predictions')
    op.drop_table('predictions')
    op.drop_index('ix_sensor_data_id', table_name='sensor_data')
    op.drop_table('sensor_data')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sensor_data',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('batch_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('temperature', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('pressure', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('humidity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('composition', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['batches.id'], name='sensor_data_batch_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='sensor_data_pkey')
    )
    op.create_index('ix_sensor_data_id', 'sensor_data', ['id'], unique=False)
    op.create_table('predictions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('batch_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('defect_prob', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('recommendation', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['batches.id'], name='predictions_batch_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='predictions_pkey')
    )
    op.create_index('ix_predictions_id', 'predictions', ['id'], unique=False)
    op.drop_index(op.f('ix_stage_sensor_data_id'), table_name='stage_sensor_data')
    op.drop_table('stage_sensor_data')
    op.drop_index(op.f('ix_stage_predictions_id'), table_name='stage_predictions')
    op.drop_table('stage_predictions')
    op.drop_index(op.f('ix_stages_id'), table_name='stages')
    op.drop_table('stages')
    # ### end Alembic commands ###
